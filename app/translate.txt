Класна особа
Прочитайте інструкцію перед початком
У вас є список диктовок people, кожен диктант означає особу , він має ключі: name, age, wife/ husband-
залежить від того, чи є особа чоловіком чи жінкою. Всі namesрізні. Ключ wife/ husbandможе бути Noneабо ім'ям іншої особи.

Створити клас Person. Його конструктор приймає та зберігає nameлюдину age. Цей клас також повинен мати атрибут
class people, це dict, який зберігає Person екземпляри за їхніми name. Конструктор повинен додати елементи до цього атрибута.

Функція Write create_person_list, ця функція приймає список peopleі повертає список із Personекземплярами замість диктовок.

Примітка:

Якщо ключ особиwife / husbandне є None- create_person_listслід додати атрибут wife/ husbandвідповідно до його екземпляра.
Цей атрибут має бути посиланням на Personекземпляр із nameтаким самим ключем, як wife/ husbandу диктовці користувача.

приклад:

people = [
    {"name": "Ross", "age": 30, "wife": "Rachel"},
    {"name": "Joey", "age": 29, "wife": None},
    {"name": "Rachel", "age": 28, "husband": "Ross"}
]

person_list = create_person_list(people)
isinstance(person_list[0], Person) # True
person_list[0].name == "Ross"
person_list[0].wife is person_list[2] # True
person_list[0].wife.name == "Rachel"

person_list[1].name == "Joey"
person_list[1].wife
# AttributeError

isinstance(person_list[2], Person) # True
person_list[2].name == "Rachel"
person_list[2].husband is person_list[0] # True
# The same as person_list[0]
person_list[2].husband.name == "Ross"
person_list[2].husband.wife is person_list[2]  # True

Person.people == {
    "Ross": <__main__.Person object at 0x10c20ca60>,
    "Joey": <__main__.Person object at 0x10c180a00>,
    "Rachel": <__main__.Person object at 0x10c1804f0>
}
Hint- використовувати pytestдля тестування